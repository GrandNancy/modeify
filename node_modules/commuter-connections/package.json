{
  "name": "commuter-connections",
  "version": "1.0.0",
  "description": "Find matches from CommuterConnections.org",
  "main": "index.js",
  "scripts": {
    "test": "standard && NODE_ENV=test node_modules/.bin/babel-node node_modules/.bin/mocha --compilers js:babel/register --recursive --reporter spec --slow 10 --timeout 10s",
    "test-cov": "NODE_ENV=test node_modules/.bin/babel-node node_modules/.bin/isparta cover node_modules/mocha/bin/_mocha -- --recursive --compilers js:babel/register --reporter dot --slow 10 --timeout 30s",
    "test-travis": "NODE_ENV=test node_modules/.bin/babel-node node_modules/.bin/isparta cover ./node_modules/.bin/_mocha --report lcovonly -- --recursive --compilers js:babel/register --reporter dot --slow 10 --timeout 30s"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/conveyal/commuter-connections.js.git"
  },
  "keywords": [
    "carpool",
    "dc",
    "commuters",
    "tdm"
  ],
  "author": {
    "name": "Conveyal"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/conveyal/commuter-connections.js/issues"
  },
  "homepage": "https://github.com/conveyal/commuter-connections.js",
  "dependencies": {
    "soap": "^0.8.0"
  },
  "devDependencies": {
    "babel": "^5.1.9",
    "isparta": "^3.0.3",
    "mocha": "^2.2.4",
    "standard": "^3.6.0"
  },
  "readme": "# commuter-connections\n\nFind matches from CommuterConnections.org\n\n\n### `URL`\n\nBase URL for requests from Commuter Connections\n\n\n### `findMatches(opts)`\n\nMake a SOAP request to [Commuter Connections](http://www.commuterconnections.org/) to get the number of carpools available for a given starting, ending location, and search radius.\n\n\n### Parameters\n\n| parameter | type   | description    |\n| --------- | ------ | -------------- |\n| `opts`    | Object | Options object |\n\n\n### Example\n\n```js\nimport {findMatches} from 'commuter-connections'\nfindMatches({\n  startLat: 39.0436,\n  startLng: -77.4875,\n  endLat: 38.9047,\n  endLng: -77.0164,\n  startRadius: 2,\n  endRadius: 2\n}).then((matches) => {\n  console.log(matches) // # of matches found\n}, handleError)\n```\n\n\n**Returns** `Promise`, promise\n\n\n### `verifyFindMatchesOptions(opts)`\n\nVerify find the options required for `findMatches`\n\n\n### Parameters\n\n| parameter | type   | description    |\n| --------- | ------ | -------------- |\n| `opts`    | Object | Options object |\n\n\n### Example\n\n```js\nimport {verifyFindMatchesOptions} from 'commuter-connections'\nconst errors = verifyFindMatchesOptions(opts)\nif (errors.length > 0) handleErrors(errors)\n```\n\n\n**Returns** `Array`, errors Errors found in the options\n\n\n### `createSoapClient`\n\nCreate a SOAP client to use with commuter connections.\n\n\n### Example\n\n```js\nimport {createSoapClient} from 'commuter-connections'\ncreateSoapClient().then((client) => {\n  // use the client\n})\n```\n\n\n**Returns** `Promise`, promise\n\n## Installation\n\nRequires [nodejs](http://nodejs.org/).\n\n```sh\n$ npm install commuter-connections\n```\n\n## Tests\n\n```sh\n$ npm test\n```\n\n\n",
  "readmeFilename": "README.md",
  "gitHead": "73b2537ac177722d97e81ae039cd7df1c397180e",
  "_id": "commuter-connections@1.0.0",
  "_shasum": "265400abfb879237778170ea1cf1811a9af7b262",
  "_from": "commuter-connections@*"
}
